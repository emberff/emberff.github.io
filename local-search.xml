<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>hexo+fluid博客搭建</title>
    <link href="/2024/10/01/hexo-fluid%E6%90%AD%E5%BB%BA/"/>
    <url>/2024/10/01/hexo-fluid%E6%90%AD%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<blockquote><p>作为一个学计算机的人,不做个人博客就像四大名著不看红楼梦……<br>简单的折腾几天也是终于把样子搭好了!下面简单记录一下搭建的过程.</p></blockquote><h1 id="1-hexo-的本地环境搭建"><a href="#1-hexo-的本地环境搭建" class="headerlink" title="1. hexo 的本地环境搭建"></a>1. hexo 的本地环境搭建</h1><p>hexo本地环境需要<code>Nodejs</code>和<code>git</code>,<code>nodejs</code>作用是在本地编译,<code>git</code>是将编译完成的文件上传到仓库,由于我很早就完成了安装,且网上教程很多,此处不再赘述.</p><p>(1) 在需要的环境配置完成后,使用npm安装heox</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs avrasm">npm install -g hexo-<span class="hljs-keyword">cli</span><br></code></pre></td></tr></table></figure><p>(2) 在命令行中选择一个文件夹进行初始化.下面的命令会在当前目录中创建一个blog的文件夹,并在其中配置相关依赖</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs csharp">hexo <span class="hljs-keyword">init</span> blog<br></code></pre></td></tr></table></figure><p>(3) 进入文件夹并安装依赖</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> blog<br>npm i<br></code></pre></td></tr></table></figure><p>等待安装完成后,blog中会出现如下文件:<br>![alt text]<img src="https://blog-1318796820.cos.ap-shanghai.myqcloud.com/blog/20241001202737.png"></p><p>(4) 直接使用hexo提供的命令就能在本地看到博客的界面了</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs axapta">hexo <span class="hljs-keyword">server</span><br></code></pre></td></tr></table></figure><p>![alt text]<img src="https://blog-1318796820.cos.ap-shanghai.myqcloud.com/blog/202410012030784.png"></p><h1 id="2-在服务器部署-Debain"><a href="#2-在服务器部署-Debain" class="headerlink" title="2. 在服务器部署(Debain)"></a>2. 在服务器部署(Debain)</h1><blockquote><p>Debain的包管理工具为apt, 若使用的是其他Linux发行版,只要把安装的指令切换成对应发行版的包管理工具即可,流程是相同的</p></blockquote><h2 id="1-在服务器的控制台中修改策略组-开放以下端口"><a href="#1-在服务器的控制台中修改策略组-开放以下端口" class="headerlink" title="(1) 在服务器的控制台中修改策略组,开放以下端口"></a>(1) 在服务器的控制台中修改策略组,开放以下端口</h2><p>22: 用于 git 的远程连接,在执行<code>hexo delpoy</code>部署时需要用到<br>80: http 连接使用的端口<br>443: https 连接使用的端口</p><h2 id="2-配置-Nginx"><a href="#2-配置-Nginx" class="headerlink" title="(2) 配置 Nginx"></a>(2) 配置 Nginx</h2><p>安装 nginx:</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">apt <span class="hljs-keyword">install</span> nginx<br></code></pre></td></tr></table></figure><p>启动 nginx</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> systemctl start nginx<br></code></pre></td></tr></table></figure><p>创建一个证书存储目录,并将证书相关文件将证书文件(<code>.pem</code>以及<code>.key</code>文件)添加进去:</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">mkdir <span class="hljs-regexp">/etc/</span>nginx<span class="hljs-regexp">/conf.d/</span>cert<br></code></pre></td></tr></table></figure><p>先建立一个hexo工作目录,此目录为博客推送后实际存储的位置(根目录):</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> /var/www/hexo<br></code></pre></td></tr></table></figure><p>![alt text]<img src="https://blog-1318796820.cos.ap-shanghai.myqcloud.com/blog/202410012031287.png"></p><p>配置 nginx 路由</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">vi</span> /etc/nginx/<span class="hljs-keyword">conf</span>.d/blog.<span class="hljs-keyword">conf</span><br></code></pre></td></tr></table></figure><p>输入以下内容:<br>其中<code>server_name</code>可填写域名,若无则填写服务器的公网ip</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">server</span> &#123;<br>    <span class="hljs-attribute">listen</span> <span class="hljs-number">80</span> default_server;<br>    <span class="hljs-attribute">listen</span> [::]:<span class="hljs-number">80</span> default_server;<br>    <span class="hljs-attribute">server_name</span> blog.xxx.com; <br><br>    <span class="hljs-comment"># 强制重定向所有 HTTP 请求到 HTTPS</span><br>    <span class="hljs-attribute">return</span> <span class="hljs-number">301</span> https://<span class="hljs-variable">$host</span><span class="hljs-variable">$request_uri</span>;<br>&#125;<br><br><span class="hljs-section">server</span> &#123;<br>    <span class="hljs-attribute">listen</span> <span class="hljs-number">443</span> ssl;<br>    <span class="hljs-attribute">server_name</span> blog.xxx.com;<br><br>    <span class="hljs-comment"># 修改为正确的证书文件路径</span><br>    <span class="hljs-attribute">ssl_certificate</span> /etc/nginx/conf.d/cert/blog.emb42.com_bundle.pem;<br>    <span class="hljs-attribute">ssl_certificate_key</span> /etc/nginx/conf.d/cert/blog.emb42.com.key;<br><br>    <span class="hljs-attribute">ssl_session_cache</span> shared:SSL:<span class="hljs-number">1m</span>;<br>    <span class="hljs-attribute">ssl_session_timeout</span> <span class="hljs-number">5m</span>;<br><br>    <span class="hljs-attribute">ssl_ciphers</span> ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;<br>    <span class="hljs-attribute">ssl_protocols</span> TLSv1.<span class="hljs-number">2</span> TLSv1.<span class="hljs-number">3</span>;<br><br>    <span class="hljs-attribute">ssl_prefer_server_ciphers</span> <span class="hljs-literal">on</span>;<br><br>    <span class="hljs-attribute">root</span> /var/www/hexo; <span class="hljs-comment"># 博客存储的根目录</span><br>    <span class="hljs-attribute">index</span> index.html;  <span class="hljs-comment"># 默认首页文件</span><br><br>    <span class="hljs-section">location</span> / &#123;<br>        <span class="hljs-attribute">try_files</span> <span class="hljs-variable">$uri</span> <span class="hljs-variable">$uri</span>/ /index.html;  <span class="hljs-comment"># 处理请求</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>检查语法并重新加载 nginx</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">nginx -t</span><br><span class="hljs-attribute">nginx -s reload</span><br></code></pre></td></tr></table></figure><h2 id="3-安装-Nodejs"><a href="#3-安装-Nodejs" class="headerlink" title="(3) 安装 Nodejs"></a>(3) 安装 Nodejs</h2><p>依次执行以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl -fsSL https://deb.nodesource.com/setup_18.x | <span class="hljs-built_in">sudo</span> -E bash -<br><span class="hljs-built_in">sudo</span> apt install -y nodejs<br></code></pre></td></tr></table></figure><p>查看安装结果，打印对应版本号则安装成功</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs crmsh"><span class="hljs-keyword">node</span> <span class="hljs-title">-v</span><br>npm -v<br></code></pre></td></tr></table></figure><h2 id="4-Git服务器配置"><a href="#4-Git服务器配置" class="headerlink" title="(4) Git服务器配置"></a>(4) Git服务器配置</h2><h3 id="修改git用户权限"><a href="#修改git用户权限" class="headerlink" title="修改git用户权限"></a>修改git用户权限</h3><p>安装 git:</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">apt <span class="hljs-keyword">install</span> git <br></code></pre></td></tr></table></figure><p>添加 git 用户:</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">adduser git</span><br></code></pre></td></tr></table></figure><p>修改用户权限:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">chmod</span> 740 /etc/sudoers<br></code></pre></td></tr></table></figure><p>编辑<code>/etc/sudoers</code>,添加<code>git ALL=(ALL) ALL</code>,修改git用户权限:</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">vi <span class="hljs-regexp">/etc/</span>sudoers<br></code></pre></td></tr></table></figure><p>先按<code>i</code>进入编辑模式,添加语句<br>![alt text]<img src="https://blog-1318796820.cos.ap-shanghai.myqcloud.com/blog/202410012031908.png"><br>按<code>esc</code>然后输入<code>:wq</code>保存退出.<br>设置 git 用户密码:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> passwd git<br></code></pre></td></tr></table></figure><p>Linux中输入密码时是不显示<code>***</code>样式的,正常输入即可</p><h3 id="配置-ssh-连接"><a href="#配置-ssh-连接" class="headerlink" title="配置 ssh 连接"></a>配置 ssh 连接</h3><blockquote><p>目的是以后使用<code>hexo deploy</code>部署时不用每次都输入密码</p></blockquote><p>切换至<code>git</code>用户,在<code>~</code>目录下创建.ssh文件夹</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">su git<br><span class="hljs-keyword">cd</span> ~<br>mkdir <span class="hljs-string">.ssh</span><br><span class="hljs-keyword">cd</span> <span class="hljs-string">.ssh</span><br></code></pre></td></tr></table></figure><p>创建公钥,执行命令后无需输入,只要按回车即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs .ssh```文件下会生成一个```authorized_keys```的文件">```<br>ssh-keygen<br></code></pre></td></tr></table></figure><p>![alt text]<img src="https://blog-1318796820.cos.ap-shanghai.myqcloud.com/blog/202410012032052.png"><br>修改其权限:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">chmod</span> 600 ~/.ssh/authorized_keys<br><span class="hljs-built_in">chmod</span> 700 ~/.ssh<br></code></pre></td></tr></table></figure><p>将本地电脑上的公钥<code>id_rsa.pub</code>文件中的内容添加至<code>authorized_keys</code>中<br>后,在本地命令给中尝试与服务器进行 ssh 连接,无报错且成功显示服务器的bash则成功</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">ssh -v <span class="hljs-symbol">git@</span>服务器ip<br></code></pre></td></tr></table></figure><p>![alt text]<img src="https://blog-1318796820.cos.ap-shanghai.myqcloud.com/blog/202410012032956.png"></p><h3 id="创建服务器-Git-仓库"><a href="#创建服务器-Git-仓库" class="headerlink" title="创建服务器 Git 仓库"></a>创建服务器 Git 仓库</h3><p>建立一个repo目录并初始化<code>blog.git</code>仓库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> /var/repo <br>git init --bare /var/repo/blog.git<br></code></pre></td></tr></table></figure><p>创建并编辑 post-receice</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">vi <span class="hljs-regexp">/var/</span>repo<span class="hljs-regexp">/blog.git/</span>hooks/post-receive<br></code></pre></td></tr></table></figure><p>添加以下内容,其功能为在blog.git接收到推送时强制将推送的内容部署到<code>/var/www/hexo</code>目录下:<br>(tips:也就是说如果推送了但网站没有更新,可以在服务器中手动执行此命令以部署):</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs groovy">git --work-tree=<span class="hljs-regexp">/var/</span>www<span class="hljs-regexp">/hexo --git-dir=/</span><span class="hljs-keyword">var</span><span class="hljs-regexp">/repo/</span>blog.git checkout -f<br></code></pre></td></tr></table></figure><p>保存退出并添加可执行权限:</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">chmod +x <span class="hljs-regexp">/var/</span>repo<span class="hljs-regexp">/blog.git/</span>hooks/post-receive<br></code></pre></td></tr></table></figure><h1 id="3-在本地配置服务器信息"><a href="#3-在本地配置服务器信息" class="headerlink" title="3. 在本地配置服务器信息"></a>3. 在本地配置服务器信息</h1><p>打开bolg文件目录中的配置文件<code>config.yml</code>,在最下面的<code>deploy</code>中修改配置信息,其中<code>repo</code>若无域名则以ip替代,<code>:</code>后填写服务器下git目录的位置:</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">deploy:</span><br><span class="hljs-symbol">  type:</span> git<br><span class="hljs-symbol">  repo:</span> git@blog.xxx.com:<span class="hljs-keyword">/var/</span>repo/blog.git<br><span class="hljs-symbol">  branch:</span> master<br></code></pre></td></tr></table></figure><p>完成后用命令行在本地博客的根目录位置执行部署命令,应该能在服务器&#x2F;var&#x2F;www&#x2F;hexo目录中看到相应的内容,并且访问服务器可以看到博客界面了</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo d</span><br></code></pre></td></tr></table></figure><h1 id="4-修改-Hexo-主题"><a href="#4-修改-Hexo-主题" class="headerlink" title="4. 修改 Hexo 主题"></a>4. 修改 Hexo 主题</h1><h2 id="安装Fluid主题"><a href="#安装Fluid主题" class="headerlink" title="安装Fluid主题"></a>安装Fluid主题</h2><p>进入博客目录执行</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">npm install <span class="hljs-comment">--save hexo-theme-fluid</span><br></code></pre></td></tr></table></figure><p>然后在博客目录下创建 _config.fluid.yml，将Fluid主题的 _config.yml (opens new window)内容复制过去</p><h2 id="指定主题"><a href="#指定主题" class="headerlink" title="指定主题"></a>指定主题</h2><p>修改本地_config.yml中的配置:</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">theme:</span> fluid  <span class="hljs-meta"># 指定主题</span><br><br><span class="hljs-symbol">language:</span> <span class="hljs-built_in">zh</span>-CN  <span class="hljs-meta"># 指定语言，会影响主题显示的语言，按需修改</span><br></code></pre></td></tr></table></figure><h2 id="创建关于页"><a href="#创建关于页" class="headerlink" title="创建关于页"></a>创建关于页</h2><p>首次使用主题的「关于页」需要手动创建：</p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs actionscript">hexo <span class="hljs-keyword">new</span> page about<br></code></pre></td></tr></table></figure><p>创建成功后修改 &#x2F;source&#x2F;about&#x2F;index.md，添加 layout 属性。</p><p>修改后的文件示例如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">标题</span><br><span class="hljs-attr">layout:</span> <span class="hljs-string">about</span><br><span class="hljs-meta">---</span><br><span class="hljs-meta"></span><br><span class="hljs-string">这里写关于页的正文，支持</span> <span class="hljs-string">Markdown,</span> <span class="hljs-string">HTML</span><br></code></pre></td></tr></table></figure><p>完成后执行 hexo 命令本地检查是否切换成功:</p><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sas">hexo cl <span class="hljs-variable">&amp;&amp;</span> hexo g <span class="hljs-variable">&amp;&amp;</span> hexo s<br></code></pre></td></tr></table></figure><p>主题成功切换后部署至服务器</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo d</span><br></code></pre></td></tr></table></figure><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ul><li><a href="https://fluid-dev.github.io/hexo-fluid-docs/start/">https://fluid-dev.github.io/hexo-fluid-docs/start/</a></li><li><a href="https://hexo.io/zh-cn/docs/#%E5%AE%89%E8%A3%85-Hexo">https://hexo.io/zh-cn/docs/#%E5%AE%89%E8%A3%85-Hexo</a></li><li><a href="https://developer.aliyun.com/article/815625">https://developer.aliyun.com/article/815625</a></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>fluid</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2024/09/26/hello-world/"/>
    <url>/2024/09/26/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
